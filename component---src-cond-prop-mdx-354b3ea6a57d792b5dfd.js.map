{"version":3,"sources":["webpack:///../src/cond/Prop.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mfAMO,IAAMA,EAAe,Q,mMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,kBADR,oBAGA,wHAEA,+GACF,0BAAYC,WAAW,KAAvB,kCADE,SACkF,0BAAYA,WAAW,KAAvB,sBADlF,KAEA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,8NAaL,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,6M,0LAgBTJ,EAAWK,gBAAiB","file":"component---src-cond-prop-mdx-354b3ea6a57d792b5dfd.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/fb/github/brigand/matchany/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"prop-condition\"\n    }}>{`Prop (condition)`}</h1>\n    <p>{`Prop extracts a property of an object with the specified key; matching if the property\nexists.`}</p>\n    <p>{`It takes an optional second argument for the expected value, which is a shorthand for\n`}<inlineCode parentName=\"p\">{`Prop('key').andThen(Eq(value))`}</inlineCode>{` with `}<inlineCode parentName=\"p\">{`Prop('key', value)`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import match from 'pattahn';\nimport Prop from 'pattahn/cond/Prop';\n\nconst VALUE = { x: 1 };\n\nconst result = match()\n  .with(Prop('x'), (x) => \\`match: \\${x}\\`)\n  .exec(VALUE);\n\nexpect(result).toBe('match: 1');\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`const VALUE = { x: 1 };\n\nconst result = match()\n  .with(Prop('x', 0), 'first')\n  .with(Prop('x', 1), 'second')\n  .with(Prop('x', 2), 'third')\n  .exec(VALUE);\n\nexpect(result).toBe('second');\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}