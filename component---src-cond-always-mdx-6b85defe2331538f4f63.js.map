{"version":3,"sources":["webpack:///../src/cond/Always.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"8fAOO,IAAMA,EAAe,Q,qMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAUA,QAAQ,YAAlB,sBACA,4BAAW,0BAAYC,WAAW,KAAvB,UAAX,mFAEA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,6L,4LAeTJ,EAAWK,gBAAiB","file":"component---src-cond-always-mdx-6b85defe2331538f4f63.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/fb/github/brigand/pattahn/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport CondType from '../docs/CondType';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <CondType mdxType=\"CondType\">Always(value: any)</CondType>\n    <p>{`The `}<inlineCode parentName=\"p\">{`Always`}</inlineCode>{` condition ignores the input value and always returns the values passed to\nit.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import match from 'pattahn';\nimport Always from 'pattahn/cond/Always';\n\nconst VALUE = 1;\n\nconst result = Always(1, 2, 3).exec('anything');\n\nexpect(result).toEqual([1, 2, 3]);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}