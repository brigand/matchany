{"version":3,"sources":["webpack:///../src/cond/AndThen.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"ofAMO,IAAMA,EAAe,Q,sMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,qBADR,uBAGA,0IAEA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,gBADZ,0WAgBL,+CAA8B,0BAAYA,WAAW,KAAvB,qBAA9B,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,of,6LAwBTJ,EAAWK,gBAAiB","file":"component---src-cond-and-then-mdx-bc42fb4270938cb67832.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/fb/github/brigand/pattahn/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"andthen-condition\"\n    }}>{`AndThen (condition)`}</h1>\n    <p>{`Chain two conditions, piping the output of the first into the second. Yields the\nresult of the second condition.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import match from 'pattahn';\nimport AndThen from 'pattahn/cond/AndThen';\nimport Test from 'pattahn/cond/Test';\nimport Prop from 'pattahn/cond/Prop';\n\nconst VALUE = { foo: 17 };\nconst Gt10 = Test((x) => x > 10);\n\nconst result = match()\n  .with(AndThen(Prop('foo'), Gt10), (foo) => \\`foo: \\${foo}\\`)\n  .exec(VALUE);\n\nexpect(result).toBe('foo: 17');\n`}</code></pre>\n    <p>{`It's also available as `}<inlineCode parentName=\"p\">{`Condition#andThen`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import Id from 'pattahn/cond/id';\n\nconst VALUE = { foo: 'foo', bar: 'bar' };\n\nconst nonEmpty = Prop('length')\n  .andThen(Test((length) => length > 0))\n  // This takes us back up one level (e.g. VALUE.foo.length -> VALUE.foo)\n  .and(Id());\n\nconst fooNonEmpty = Prop('foo').andThen(nonEmpty);\nconst barNonEmpty = Prop('bar').andThen(nonEmpty);\n\nconst result = match()\n  .with(fooNonEmpty.and(barNonEmpty).and(Id()), (value) => value)\n  .exec(VALUE);\n\nexpect(result).toBe(VALUE);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}