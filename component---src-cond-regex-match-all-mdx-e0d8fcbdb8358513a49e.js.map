{"version":3,"sources":["webpack:///../src/cond/RegexMatchAll.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qfAMO,IAAMA,EAAe,Q,4MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,2BADR,6BAGA,uKACsD,0BAAYC,WAAW,KAAvB,0BADtD,KAC8H,mBAAGA,WAAW,KAAQ,CAChJ,KAAQ,wDADkH,WAD9H,0BAKA,gCAAe,mBAAGA,WAAW,KAAQ,CACjC,KAAQ,oBADG,aAAf,2CAEkE,0BAAYA,WAAW,KAAvB,iBAFlE,KAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,gBADZ,0N,mMAeTJ,EAAWK,gBAAiB","file":"component---src-cond-regex-match-all-mdx-e0d8fcbdb8358513a49e.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/fb/github/brigand/pattahn/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"regexmatchall-condition\"\n    }}>{`RegexMatchAll (condition)`}</h1>\n    <p>{`This condition matches when the input is a string/number, even if the total number of\nmatches is 0. The resulting value will be the result of `}<inlineCode parentName=\"p\">{`string.matchAll(regex)`}</inlineCode>{` (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/ljharb/String.prototype.matchAll\"\n      }}>{`a\nshim`}</a>{` is included for now).`}</p>\n    <p>{`See the `}<a parentName=\"p\" {...{\n        \"href\": \"/cond/RegexBase\"\n      }}>{`RegexBase`}</a>{` docs for different ways to construct a `}<inlineCode parentName=\"p\">{`RegexMatchAll`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import RegexMatchAll from 'pattahn/cond/RegexMatchAll';\n\nconst matches = RegexMatchAll(/\\\\d+/g)\n  .exec('7 a 32 b 49')\n  .shift()\n  .map((match) => match[0]);\n\nexpect(matches).toEqual(['7', '32', '49']);\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}