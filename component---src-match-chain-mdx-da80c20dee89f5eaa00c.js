(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{oEAy:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return r})),n.d(t,"default",(function(){return h}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk"),n("mXGw");var a=n("/FXl"),o=n("TjRS");n("aD51");function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var r={};void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/match_chain.mdx"}});var c={_frontmatter:r},l=o.a;function h(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["components"]);return Object(a.b)(l,i({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"match-chain-variant"},"match (chain variant)"),Object(a.b)("p",null,"When match is called with 0 or 1 argument it returns a chainable instance for defining\npatterns to match on."),Object(a.b)("p",null,"The main two methods are ",Object(a.b)("inlineCode",{parentName:"p"},".with")," to add a branch to the matching, and ",Object(a.b)("inlineCode",{parentName:"p"},".exec")," to run\nthe match operation (which can be called multiple times, if desired)."),Object(a.b)("pre",null,Object(a.b)("code",i({parentName:"pre"},{className:"language-js"}),"import match from 'pattahn';\n\nconst r1 = match()\n  .with('foo', 'is foo')\n  .with('bar', 'is bar')\n  .exec('foo');\n\n// The value can alternatively be provided to match() as a single argument,\n// if preferred for style.\nconst r2 = match('foo')\n  .with('foo', 'is foo')\n  .with('bar', 'is bar')\n  .exec();\n\nexpect(r1).toBe('is foo');\nexpect(r2).toBe('is foo');\n")),Object(a.b)("p",null,"The first argument to ",Object(a.b)("inlineCode",{parentName:"p"},".with")," is a condition, or a value supported by\n",Object(a.b)("a",i({parentName:"p"},{href:"/pattahn/into-condition"}),"intoCondition"),"."),Object(a.b)("p",null,"The second argument is either a literal value, or a function that takes the output of\nthe condition and returns the value. If the resulting value will be a function, then\nyou need a function that returns a function."),Object(a.b)("h2",{id:"other-methods"},"Other methods"),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},".any")," takes the second argument to ",Object(a.b)("inlineCode",{parentName:"p"},".with")," and matches on any input (i.e. the\ndefault case for a match). The call ",Object(a.b)("inlineCode",{parentName:"p"},".any(result)")," is identical to\n",Object(a.b)("inlineCode",{parentName:"p"},".with(Test(() => true), result)"),"."),Object(a.b)("p",null,"Both ",Object(a.b)("inlineCode",{parentName:"p"},".any")," and ",Object(a.b)("inlineCode",{parentName:"p"},".with")," return the matcher object to allow chaining."),Object(a.b)("p",null,"The ",Object(a.b)("inlineCode",{parentName:"p"},".clone")," method takes no arguments and returns a shallow clone of the matcher\n(where ",Object(a.b)("inlineCode",{parentName:"p"},".clone().with(...)")," won't add a condition to the original)."))}h&&h===Object(h)&&Object.isExtensible(h)&&!h.hasOwnProperty("__filemeta")&&Object.defineProperty(h,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/match_chain.mdx"}}),h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-match-chain-mdx-da80c20dee89f5eaa00c.js.map