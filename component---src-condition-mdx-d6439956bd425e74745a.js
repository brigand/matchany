(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{B28o:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return i})),t.d(n,"default",(function(){return l}));t("5hJT"),t("W1QL"),t("K/PF"),t("t91x"),t("75LO"),t("PJhk"),t("mXGw");var o=t("/FXl"),a=t("TjRS");t("aD51");function r(){return(r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/condition.mdx"}});var c={_frontmatter:i},s=a.a;function l(e){var n=e.components,t=function(e,n){if(null==e)return{};var t,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,["components"]);return Object(o.b)(s,r({},c,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"condition"},"Condition"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"Condition")," class represents a boolean match and/or a transformation of the input\nvalues."),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{className:"language-js"}),"import { Condition, Match } from 'pattahn/core';\n")),Object(o.b)("p",null,"You can subclass ",Object(o.b)("inlineCode",{parentName:"p"},"Condition")," by defining a constructor (which passes the name to\nsuper) and an ",Object(o.b)("inlineCode",{parentName:"p"},"impl")," method which takes at least one argument and returns ",Object(o.b)("inlineCode",{parentName:"p"},"null")," or a\n",Object(o.b)("inlineCode",{parentName:"p"},"Match"),". Here's the simplest Condition: the identity condition."),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{className:"language-js"}),"class Id extends Condition {\n  constructor() {\n    super('Id');\n  }\n\n  impl(...args) {\n    return new Match(...args);\n  }\n}\n\nmodule.exports = Id.factory;\n\nconst result = Id.factory().exec(7);\nexpect(result).toEqual([7]);\n\n// The class is also exposed as a property of the factory\nexpect(Id.factory.class).toBe(Id);\n")),Object(o.b)("p",null,"There's a ",Object(o.b)("inlineCode",{parentName:"p"},".factory")," getter on ",Object(o.b)("inlineCode",{parentName:"p"},"Condition")," that simply allows the class to be\nconstructed without ",Object(o.b)("inlineCode",{parentName:"p"},"new"),". All first-party conditions export the factory to clean up\nthe consuming code."))}l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/condition.mdx"}}),l.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-condition-mdx-d6439956bd425e74745a.js.map